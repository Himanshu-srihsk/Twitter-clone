package com.fun.config;

import java.io.IOException;

import javax.crypto.SecretKey;

import org.springframework.web.filter.OncePerRequestFilter;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.security.Keys;
import jakarta.servlet.Filter;
import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.ServletRequest;
import jakarta.servlet.ServletResponse;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public class JwtTokenValidator extends OncePerRequestFilter {

	@Override
	protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {
		    String jwt = request.getHeader(JwtConstant.JWT_HEADER);
		    
		    //Bearer Jwttoken
		    
		    if(jwt!=null) {
		    	jwt = jwt.substring(7);
		    	try {
					SecretKey key = Keys.hmacShaKeyFor(JwtConstant.SECRET_KEY.getBytes());
					Claims claims =  Jwts
			                .parser()
			                .setSigningKey(getSigningKey())
			                .build()
			                .parseClaimsJws(token)
			                .getBody();
				} catch (Exception e) {
					// TODO: handle exception
				}
		    }
		
	}


}
